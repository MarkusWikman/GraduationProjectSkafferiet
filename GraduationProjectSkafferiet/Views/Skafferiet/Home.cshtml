@model HomeVM
<div>
    @{
        ViewData["Title"] = "Home";
    }
</div>

<div class="menu">
    <h1 class="navbar-brandHeader">Skafferiet</h1>
    <br />
    <h3 class="WelcomeBackStyle">What's in your pantry, @Model.Name?</h3>

    <form id="inventory" asp-controller="Skafferiet" asp-action="Home" asp-route-checkState="">
        @*<label class="AIngredientStyle" for="ingredients">Add to pantry:</label>*@
        <br />
        <select class="selectStyle" asp-for="AddIngredient" asp-items="Model.IngredientsList" autofocus></select>

        <button form="inventory" class="btn btn-primary AddIngredientStyle" id="addIngredientButton" onclick="document.getElementById('addIngredientButton').disabled = true ;document.getElementById('inventory').submit(); ">Add Ingredient</button>
        <button id="getRecipesBtn" type="submit" form="getRecipes" class="btn btn-success GetRecipesStyle" @(!Model.IsIngredientChosen ? "disabled" : "")>Get Recipes</button>
    </form>

    @if (Model.IsIngredientChosen)
    {
        @*        @if(Model.IsAllChosen)
    {
    <form method="get" class="checkButtonForm" asp-controller="Skafferiet" asp-action="Home" asp-route-checkState="unchecked">
    <input class="unCheckButton"  type="submit" value="Uncheck all" />
    </form>
    }
    else
    {
    <form method="get" class="checkButtonForm" asp-controller="Skafferiet" asp-action="Home" asp-route-checkState="checked">
    <input class="checkButton" type="submit" value="Check all" />
    </form>
    }*@
        <button class="checkButton checkButtonForm" id="checkButton" onclick="checkOrUncheck()">Unselect All</button>
        <div id="inventoryDiv">

            <form id="getRecipes" asp-action="Recipes" asp-controller="Skafferiet">
                <ul class="list-unstyled">


                    @foreach (var item in Model.Inventory)
                    {
                        <li>
                            <div class="d-flex">
                                <a class="btn-close deleteStyle" asp-action="Delete" asp-controller="Skafferiet" asp-route-ingredientName="@item.Value" onclick="clickAndDisable(this)"></a>
                                <div class="d-inline-block align-middle">
                                    <div class="d-inline-block align-middle checkboxes">
                                        <label for="@item.Value" class="labelStyle d-inline-block align-middle">
                                            @item.Value
                                            <input type="checkbox" class="InputStyle" name="@nameof(HomeVM.SelectedIngredients)" value="@item.Value" id="@item.Value" checked />
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </form>
        </div>

    }
    else
    {
        <div>
            <p class="PantryEmptyStyle">Add your ingredients to see them here!</p>
        </div>
    }
</div>


<script>
    let checkBoxes = document.querySelectorAll("input[type='checkbox']");
    let checkButton = document.getElementById('checkButton')
    let shouldCheckAll = false;

    function clickAndDisable(link) {
        // disable subsequent clicks
        link.onclick = function (event) {
            event.preventDefault();
        }
    }
    function checkOrUncheck() {
        checkButton.innerText = shouldCheckAll ? checkButton.innerText = "Unselect All" : checkButton.innerText = "Select All ✅"
        checkBoxes.forEach(c => c.checked = shouldCheckAll)
        shouldCheckAll = !shouldCheckAll;
        anyChecked()
            ? getRecipesBtn.removeAttribute('disabled')
            : getRecipesBtn.setAttribute('disabled', '')
    }


    // get a list of the checkboxes and spread it into an array
    // so later you can use Array methods on it
    const checkboxes = [...document.querySelectorAll('input[type=checkbox]')]
    const getRecipesBtn = document.getElementById('getRecipesBtn')

    // function that tells you if any checkboxes in
    // the above list are checked
    function anyChecked() {
        // this is where we're using an array method
        // Array.prototype.some
        return checkboxes.some(x => x.checked)
    }

    // to every single checkbox, add a click listener
    // again, using an Array method
    // Array.prototype.forEach
    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('click', () => {
            // when any checkbox is clicked,
            // check if there's any checked checkboxes
            anyChecked()
                // if so, enable the button
                ? getRecipesBtn.removeAttribute('disabled')
                // otherwise, disable it
                : getRecipesBtn.setAttribute('disabled', '')
        })
    })

    // do the same thing initially as well
    // to account for initially checked checkboxes
    anyChecked()
        ? getRecipesBtn.removeAttribute('disabled')
        : getRecipesBtn.setAttribute('disabled', '')
</script>


